#list stopped container in docker 
docker container ls -f 'status=exited' -f 'status=dead' -f 'status=created' -aq

#Remove stopped container
docker container rm $(docker container ls -f 'status=exited' -f 'status=dead' -f 'status=created' -aq)

# See a list of all running containers
docker ps   

# See a list of all containers, even the ones not running
docker ps -a    

# Remove all containers from this machine
docker rm $(docker ps -a -q)

# Remove the specified image from this machine
docker rmi <imagename>

# Run the specified Compose file
sudo docker stack deploy --resolve-image=changed --compose-file services.yaml <stack name>

# Create image using this directory's Dockerfile
docker build -t friendlyname .  

# Run "friendlyname" mapping port 4000 to 80
docker run -p 4000:80 friendlyname  

# Same thing, but in detached mode
docker run -d -p 4000:80 friendlyname         

# See a list of all running containers
docker ps                                 

# Gracefully stop the specified container
docker stop <hash>                     

# See a list of all containers, even the ones not running
docker ps -a           

# Force shutdown of the specified container
docker kill <hash>                   

# Remove the specified container from this machine
docker rm <hash>              

# Remove all containers from this machine
docker rm $(docker ps -a -q)           

#Show all images on this machine
docker images -a                               

# Remove the specified image from this machine
docker rmi <imagename>            

# Remove all images from this machine
docker rmi $(docker images -q)             

# Log in this CLI session using your Docker credentials
docker login             

# Tag <image> for upload to registry
docker tag <image> username/repository:tag 

# Upload tagged image to registry
docker push username/repository:tag            

# Run image from a registry
docker run username/repository:tag         

# List all running applications on this Docker host
docker stack ls             

# Run the specified Compose file
docker stack deploy -c <composefile> <appname>  

# List the services associated with an app
docker stack services <appname>       

# List the running containers associated with an app
docker stack ps <appname>   

# Tear down an application
docker stack rm <appname>

# Create a VM (Mac, Win7, Linux)
docker-machine create --driver virtualbox myvm1 

docker-machine create -d hyperv --hyperv-virtual-switch "myswitch" myvm1 # Win10

# View basic information about your node
docker-machine env myvm1                

# List the nodes in your swarm
docker-machine ssh myvm1 "docker node ls"         

# Inspect a node
docker-machine ssh myvm1 "docker node inspect <nodeID>"        

 # View join token
 docker-machine ssh myvm1 "docker swarm join-token -q worker"  

# Open an SSH session with the VM; type "exit" to end
docker-machine ssh myvm1  

# Make the worker leave the swarm
docker-machine ssh myvm2 "docker swarm leave"  

# Make master leave, kill swarm
docker-machine ssh myvm1 "docker swarm leave -f" 

# Start a VM that is currently not running
docker-machine start myvm1            

# Stop all running VMs
docker-machine stop $(docker-machine ls -q)               

# Delete all VMs and their disk images
docker-machine rm $(docker-machine ls-q) 

# Copy file to node's home dir
docker-machine scp docker-compose.yml myvm1:~     

# Deploy an app
docker-machine ssh myvm1 "docker stack deploy -c <file> <app>"   

# Start the container as a daemon with SSH
listening on port 2228

sudo docker run -p 2228:22 -d --name=cemod repo.lab.pl.alcatel-lucent.com:6555/cemod/build_rhel7_jdk1.7_maven3:201706131722-candidate
2ad8d90b22e04916da2890628a409413e1ff24385e00f42d736d8d874abad332

# Connect to the container and set the jenkins user's password
sudo docker exec -it cemod bash
passwd jenkins
exit

# SSH to the container as jenkins user - this is
what the Jenkins Master does
ssh -p 2228 jenkins@localhost
sudo docker run -p 2232:24 -d --name=jdktrial jdk1.8:latest
sudo docker exec -it jdktrial bash
$$$$$$$$$$$$$$$$$$$$$$$$$$$
sudo docker run -p 2232:24 -d --name=jdktrial jdk1.8:latest
sudo docker exec -it faeb43136611 bash
